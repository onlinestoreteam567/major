@import './variables.scss';

@mixin flex($direction: row, $justify: center, $align: center) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
}

@mixin flexGap($gap, $flex-direction: row) {
  display: flex;
  flex-direction: $flex-direction;
  gap: $gap;
}

@mixin absolute($top: 0px, $left: 0px) {
  position: absolute;
  top: $top;
  left: $left;
}

@mixin input($gap, $height) {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;
  gap: $gap;
  width: inherit;
  height: auto;
  font-size: $font-size-base;
  font-weight: $font-weight-base;
  line-height: 1.36;
  span {
    color: red;
  }
  input {
    box-sizing: border-box;
    width: inherit;
    height: $height;
    font-family: $font-main;
    font-size: $font-size-base;
    font-weight: $font-weight-base;
    letter-spacing: $letter-spacing-small;
    border: 1px solid rgb(103, 103, 103);
    border-radius: 4px;
    background: rgb(247, 247, 247);
    padding: 12px;
    &::placeholder {
      color: rgb(103, 103, 103);
      font-family: $font-main;
      font-size: $font-size-small;
      font-weight: $font-weight-base;
      line-height: 1.16;
      letter-spacing: 0.04;
      text-align: left;
    }
  }
  textarea {
    box-sizing: border-box;
    width: inherit;
    height: $height;
    font-size: $font-size-base;
    font-weight: $font-weight-base;
    border: 1px solid rgb(103, 103, 103);
    border-radius: 4px;
    background: rgb(247, 247, 247);
    padding: 12px;
    &::placeholder {
      color: rgb(103, 103, 103);
      font-family: $font-main;
      font-size: $font-size-small;
      font-weight: $font-weight-base;
      line-height: 1.16;
      letter-spacing: 0.04;
      text-align: left;
    }
  }
  .error {
    @include flex(row, flex-start, center);
    width: inherit;
    height: 18px;
    font-size: $font-size-base;
    letter-spacing: $letter-spacing-small;
    color: red;
  }
}

// responsives
@mixin deskmax {
  @media only screen and (min-width: 1440px) {
    @content;
  }
}

@mixin deskmin {
  @media only screen and (min-width: 1024px) {
    @content;
  }
}

@mixin tablet {
  @media only screen and (min-width: 768px) {
    @content;
  }
}

@mixin mobile {
  @media only screen and (min-width: 380px) {
    @content;
  }
}

@mixin layout {
  & {
    box-sizing: border-box;
    padding: 0 12px 120px 12px;
    min-width: 380px;
    max-width: 767px;
  }
  @include tablet {
    padding: 0 64px 120px 64px;
    min-width: 768px;
    max-width: 1023px;
  }

  @include deskmin {
    padding: 0 24px 120px 24px;
    min-width: 1024px;
    max-width: 1439px;
  }

  @include deskmax {
    padding: 0 72px 120px 72px;
    width: 1440px;
  }
}

@mixin showCloseAnimation($animationType: 'show', $direction: 100%, $duration: 300ms) {
  @keyframes show {
    from {
      transform: translateX($direction);
    }
    to {
      transform: translateX(0);
    }
  }

  @keyframes close {
    from {
      transform: translateX(0);
    }
    to {
      transform: translateX($direction);
    }
  }

  & {
    @if $animationType == 'show' {
      animation: show $duration ease-out;
    } @else if $animationType == 'close' {
      animation: close $duration ease-in;
    }
  }
}
